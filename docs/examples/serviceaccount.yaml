apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ .Release.Name }}-{{ .Chart.Name }}-sa"
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/name: "{{ .Chart.Name }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: { ? { .Chart.AppVersion | quote } }
    app.kubernetes.io/component: { ? { .Values.component | default "application" | quote } }
    app.kubernetes.io/part-of: "{{ .Chart.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
automountServiceAccountToken: true

# ClusterRole (para permissões de cluster)
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "{{ .Release.Name }}-{{ .Chart.Name }}-cluster-role"
  labels:
    app.kubernetes.io/name: "{{ .Chart.Name }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: { ? { .Chart.AppVersion | quote } }
    app.kubernetes.io/component: { ? { .Values.component | default "application" | quote } }
    app.kubernetes.io/part-of: "{{ .Chart.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
rules:
- apiGroups: [ "" ]
  resources: [ "pods", "services" ]
  verbs: [ "get", "list", "watch" ]

# ClusterRoleBinding
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "{{ .Release.Name }}-{{ .Chart.Name }}-cluster-binding"
  labels:
    app.kubernetes.io/name: "{{ .Chart.Name }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: { ? { .Chart.AppVersion | quote } }
    app.kubernetes.io/component: { ? { .Values.component | default "application" | quote } }
    app.kubernetes.io/part-of: "{{ .Chart.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
subjects:
- kind: ServiceAccount
  name: "{{ .Release.Name }}-{{ .Chart.Name }}-sa"
  namespace: "{{ .Release.Namespace }}"
roleRef:
  kind: ClusterRole
  name: "{{ .Release.Name }}-{{ .Chart.Name }}-cluster-role"
  apiGroup: rbac.authorization.k8s.io

# Token de longa duração (para acesso externo)
---
apiVersion: v1
kind: Secret
metadata:
  name: "{{ .Release.Name }}-{{ .Chart.Name }}-sa-token"
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/name: "{{ .Chart.Name }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: { ? { .Chart.AppVersion | quote } }
    app.kubernetes.io/component: { ? { .Values.component | default "application" | quote } }
    app.kubernetes.io/part-of: "{{ .Chart.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
  annotations:
    kubernetes.io/service-account.name: "{{ .Release.Name }}-{{ .Chart.Name }}-sa"
type: kubernetes.io/service-account-token

# PADRÕES:
# - ServiceAccount: {{ .Release.Name }}-{{ .Chart.Name }}-sa
# - ClusterRole: {{ .Release.Name }}-{{ .Chart.Name }}-cluster-role
# - ClusterRoleBinding: {{ .Release.Name }}-{{ .Chart.Name }}-cluster-binding
# - Token: {{ .Release.Name }}-{{ .Chart.Name }}-sa-token
# - Labels: Todas as 6 labels kubernetes.io em todos os recursos 
